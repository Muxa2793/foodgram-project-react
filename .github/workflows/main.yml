name: foodgram workflow

on: [push]

jobs:

  # JOB 1: PEP8 CHECK
  tests:
    name: pep8 check and tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      # STEP 1
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: 3.9
      # STEP 2
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip 
          pip install flake8 pep8-naming flake8-broken-line flake8-return
          cd backend
          pip install -r requirements.txt
      # STEP 3
      - name: Test with flake8
        run: |
          python -m flake8

  # JOB 2: PUSH DOCKER IMAGE
  build_and_push_to_docker_hub:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    steps:
      # STEP 1
      - name: Check out the repo
        uses: actions/checkout@v3
      # STEP 2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1 
      # STEP 3
      - name: Login to Docker 
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKER_USERNAME }} 
          password: ${{ secrets.DOCKER_PASSWORD }} 
      # STEP 4
      - name: Push to Docker Hub
        uses: docker/build-push-action@v2 
        with:
          context: backend/
          push: true
          tags: mspiridonov/foodgram_backend:latest

  # JOB 3: DEPLOY
  deploy:
    name: Deploy on server
    runs-on: ubuntu-latest
    needs: build_and_push_to_docker_hub
    if: github.ref == 'refs/heads/master'
    steps:
      # STEP 1
      - name: executing remote ssh commands to deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            cd foodgram-project-react
            sudo rm .env
            touch .env
            echo SECRET_KEY=${{ secrets.SECRET_KEY }} >> .env
            echo DB_ENGINE=${{ secrets.DB_ENGINE }} >> .env
            echo POSTGRES_DB=${{ secrets.POSTGRES_DB }} >> .env
            echo POSTGRES_USER=${{ secrets.POSTGRES_USER }} >> .env
            echo POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} >> .env
            echo DB_HOST=${{ secrets.DB_HOST }} >> .env
            echo DB_PORT=${{ secrets.DB_PORT }} >> .env

            cd infra
            sudo docker-compose stop
            sudo docker-compose rm -f backend  
            sudo docker image rm mspiridonov/foodgram_backend
            sudo docker-compose up -d --build
            sudo docker-compose exec -T backend python manage.py collectstatic --no-input
            sudo docker-compose exec -T backend python manage.py makemigrations
            sudo docker-compose exec -T backend python manage.py migrate


  # JOB 4: SEND MESSAGE TO TELEGRAM
  send_message:
    name: Send message from telegram bot
    runs-on: ubuntu-latest
    needs: deploy
    steps:
    # STEP 1
    - name: send message
      uses: appleboy/telegram-action@master
      with:
        to: ${{ secrets.TELEGRAM_TO }}
        token: ${{ secrets.TELEGRAM_TOKEN }}
        message: ${{ github.workflow }} успешно выполнен!